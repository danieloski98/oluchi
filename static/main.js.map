{"version":3,"sources":["./$_lazy_route_resource lazy namespace object","./src/app/app-routing.module.ts","./src/app/app.component.html","./src/app/app.component.ts","./src/app/app.module.ts","./src/app/guard/user-check.guard.ts","./src/environments/environment.ts","./src/main.ts"],"names":[],"mappings":";;;;;;;;;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,EAAE;AACF;AACA,4CAA4C,WAAW;AACvD;AACA;AACA,wE;;;;;;;;;;;;ACXA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAuD;WAOrC,GAAG,EAAE,CAAC,olBAAqD,CAAC,IAAI,CAAE,GAAG,CAAC,EAAE,CAAC,GAAG,2BAAkB,CAAC,OAI/F,GAAG,EAAE,CAAC,sZAAuC,CAAC,IAAI,CAAC,GAAG,CAAC,EAAE,CAAC,GAAG,oBAAW,CAAC,OAIzE,GAAG,EAAE,CAAC,okBAAiD,CAAC,IAAI,CAAE,GAAG,CAAC,EAAE,CAAC,GAAG,yBAAgB,CAAC;AAX3G,MAAM,MAAM,GAAW;IACrB;QACE,IAAI,EAAE,EAAE;QACR,YAAY,IAAiG;KAC9G;IACD;QACE,IAAI,EAAE,MAAM;QACZ,YAAY,IAA2E;KACxF;IACD;QACE,IAAI,EAAE,WAAW;QACjB,YAAY,IAA2F;KAExG;IACD;QACE,IAAI,EAAE,GAAG;QACT,UAAU,EAAE,MAAM;QAClB,SAAS,EAAE,MAAM;KAClB;CACF,CAAC;AASK,MAAM,gBAAgB;CAAI;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;kGChCjC,0IAAoB,KAElB,8lBAAe;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;ACHjB;AAAA;AAAA;AAAkD;AAO3C,MAAM,YAAY;IALzB;QAOE,UAAK,GAAG,YAAY,CAAC;IAYvB,CAAC;IARC,QAAQ;QACN,IAAI,CAAC,WAAW,GAAG,KAAK,CAAC;QACzB,UAAU,CAAC,GAAG,EAAE;YACd,MAAM,MAAM,GAAY,QAAQ,CAAC,aAAa,CAAC,SAAS,CAAC,CAAC,YAAY,CAAC;YACvE,IAAI,CAAC,SAAS,GAAG,GAAG,MAAM,IAAI,CAAC;YAC/B,IAAI,CAAC,WAAW,GAAG,IAAI,CAAC;QAC1B,CAAC,EAAE,IAAI,CAAC,CAAC;IACX,CAAC;CACF;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;ACAD;AAAA;AAAO,MAAM,SAAS;CAAI;;;;;;;;;;;;;ACpB1B;AAAA;AAAA;AAAA;AAA4G;;;AAMrG,MAAM,cAAc;IAEzB,YAAoB,MAAc;QAAd,WAAM,GAAN,MAAM,CAAQ;IAAG,CAAC;IACtC,WAAW,CACT,IAA4B,EAC5B,KAA0B;QAExB,MAAM,IAAI,GAAG,YAAY,CAAC,OAAO,CAAC,MAAM,CAAC,CAAC;QAC1C,OAAO,CAAC,GAAG,CAAC,IAAI,CAAC,CAAC;QAClB,IAAI,IAAI,KAAK,IAAI,EAAE;YACjB,IAAI,CAAC,MAAM,CAAC,QAAQ,CAAC,CAAC,QAAQ,CAAC,CAAC,CAAC;YACjC,KAAK,CAAC,mBAAmB,CAAC,CAAC;YAC3B,OAAO,KAAK,CAAC;SACd;aAAM;YACL,OAAO,IAAI,CAAC;SACb;IAEL,CAAC;;;;;;;;;;;;;;;ACxBH;AAAA;AAAA,gFAAgF;AAChF,0EAA0E;AAC1E,gEAAgE;AAEzD,MAAM,WAAW,GAAG;IACzB,UAAU,EAAE,KAAK;CAClB,CAAC;AAEF;;;;;;GAMG;AACH,mEAAmE;;;;;;;;;;;;;ACfnE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAkB;AAC6B;AAIU;;;AAEzD,IAAI,qEAAW,CAAC,UAAU,EAAE;IAC1B,oEAAc,EAAE,CAAC;CAClB;AAED,2EAAwB,uBAAgB,CAAC,6EAAU;KAChD,KAAK,CAAC,GAAG,CAAC,EAAE,CAAC,OAAO,CAAC,KAAK,CAAC,GAAG,CAAC,CAAC,CAAC","file":"main.js","sourcesContent":["function webpackEmptyAsyncContext(req) {\n\t// Here Promise.resolve().then() is used instead of new Promise() to prevent\n\t// uncaught exception popping up in devtools\n\treturn Promise.resolve().then(function() {\n\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t});\n}\nwebpackEmptyAsyncContext.keys = function() { return []; };\nwebpackEmptyAsyncContext.resolve = webpackEmptyAsyncContext;\nmodule.exports = webpackEmptyAsyncContext;\nwebpackEmptyAsyncContext.id = \"./$$_lazy_route_resource lazy recursive\";","import { NgModule } from '@angular/core';\nimport { Routes, RouterModule } from '@angular/router';\nimport { UserCheckGuard } from './guard/user-check.guard';\n\n\nconst routes: Routes = [\n  {\n    path: '',\n    loadChildren: () => import('./components/landingpage/landingpage.module').then( mod => mod.LandingpageModule)\n  },\n  {\n    path: 'auth',\n    loadChildren: () => import('./components/auth/auth.module').then(mod => mod.AuthModule)\n  },\n  {\n    path: 'dashboard',\n    loadChildren: () => import('./components/dashboard/dashboard.module').then( mod => mod.DashboardModule),\n    // canActivate: [UserCheckGuard]\n  },\n  {\n    path: '*',\n    redirectTo: 'home',\n    pathMatch: 'full'\n  }\n];\n\n@NgModule({\n  imports: [RouterModule.forRoot(routes, {useHash: true, urlUpdateStrategy: 'eager'})],\n  exports: [RouterModule],\n  providers: [\n    UserCheckGuard\n  ]\n})\nexport class AppRoutingModule { }\n","\n<div class=\"parent\">\n\n  <router-outlet></router-outlet>\n\n</div>\n","import { Component, OnInit } from '@angular/core';\n\n@Component({\n  selector: 'app-root',\n  templateUrl: './app.component.html',\n  styleUrls: ['./app.component.scss']\n})\nexport class AppComponent implements OnInit {\n\n  title = 'angularApp';\n  calculating: boolean;\n  DocHeight: string | number;\n\n  ngOnInit(): void {\n    this.calculating = false;\n    setTimeout(() => {\n      const parent: number  = document.querySelector('.parent').clientHeight;\n      this.DocHeight = `${parent}px`;\n      this.calculating = true;\n    }, 5000);\n  }\n}\n","import { BrowserModule } from '@angular/platform-browser';\nimport { NgModule } from '@angular/core';\n\nimport { AppRoutingModule } from './app-routing.module';\nimport { AppComponent } from './app.component';\nimport { BrowserAnimationsModule } from '@angular/platform-browser/animations';\nimport { MatProgressSpinnerModule } from '@angular/material/progress-spinner';\n\n@NgModule({\n  declarations: [\n    AppComponent,\n  ],\n  imports: [\n    BrowserModule,\n    AppRoutingModule,\n    BrowserAnimationsModule,\n    MatProgressSpinnerModule\n  ],\n  providers: [],\n  bootstrap: [AppComponent]\n})\nexport class AppModule { }\n","import { Injectable } from '@angular/core';\nimport { CanActivate, ActivatedRouteSnapshot, RouterStateSnapshot, UrlTree, Router } from '@angular/router';\nimport { Observable } from 'rxjs';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class UserCheckGuard implements CanActivate {\n\n  constructor(private router: Router) {}\n  canActivate(\n    next: ActivatedRouteSnapshot,\n    state: RouterStateSnapshot): boolean  {\n\n      const user = localStorage.getItem('user');\n      console.log(user);\n      if (user === null) {\n        this.router.navigate(['/login']);\n        alert(\"You have to login\");\n        return false;\n      } else {\n        return true;\n      }\n\n  }\n}\n","// This file can be replaced during build by using the `fileReplacements` array.\n// `ng build --prod` replaces `environment.ts` with `environment.prod.ts`.\n// The list of file replacements can be found in `angular.json`.\n\nexport const environment = {\n  production: false\n};\n\n/*\n * For easier debugging in development mode, you can import the following file\n * to ignore zone related error stack frames such as `zone.run`, `zoneDelegate.invokeTask`.\n *\n * This import should be commented out in production mode because it will have a negative impact\n * on performance if an error is thrown.\n */\n// import 'zone.js/dist/zone-error';  // Included with Angular CLI.\n","import 'hammerjs';\nimport { enableProdMode } from '@angular/core';\nimport { platformBrowserDynamic } from '@angular/platform-browser-dynamic';\n\nimport { AppModule } from './app/app.module';\nimport { environment } from './environments/environment';\n\nif (environment.production) {\n  enableProdMode();\n}\n\nplatformBrowserDynamic().bootstrapModule(AppModule)\n  .catch(err => console.error(err));\n"],"sourceRoot":"webpack:///"}